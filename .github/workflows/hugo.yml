# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  # Make concurrency branch-aware so runs on different refs don't conflict.
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    # Explicit job-level permissions (clarifies token scope for build steps).
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.148.2
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '24'
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: npm ci --no-audit --no-fund --omit=dev
      - name: Ensure jq is available
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            echo "jq not found, installing..."
            sudo apt-get update -y && sudo apt-get install -y jq
          else
            echo "jq already installed"
          fi
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          npm run build:hugo -- --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Obfuscate classes/ids in generated site
        run: |
          echo "Running HTML/CSS/JS obfuscator..."
          npm run build:obfuscate
      - name: Validate obfuscation and SRI
        run: |
          echo "Validating obfuscation (dry-run + check) â€” fail on SRI mismatch or missing assets"
          npm run build:obfuscate -- --check
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: .build/public
      - name: Build summary
        if: always()
        run: |
          echo "## Build summary" >> $GITHUB_STEP_SUMMARY || true
          echo "- Commit: $GITHUB_SHA" >> $GITHUB_STEP_SUMMARY || true
          echo "- Built path: .build/public" >> $GITHUB_STEP_SUMMARY || true
          # list top-level files and total size
          echo "- Files (top-level):" >> $GITHUB_STEP_SUMMARY || true
          ls -la .build/public | sed -n '1,50p' | sed 's/^/  /' >> $GITHUB_STEP_SUMMARY || true
          du -sh .build/public | awk '{print "- Total size: " $1}' >> $GITHUB_STEP_SUMMARY || true
          # include obfuscator health if present (render as Markdown table when jq is available)
          if [ -f .build/public/obfuscator.health.json ]; then
            echo "- Obfuscator health:" >> $GITHUB_STEP_SUMMARY || true
            if command -v jq >/dev/null 2>&1; then
              # core metrics table
              echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY || true
              echo "|---|---|" >> $GITHUB_STEP_SUMMARY || true
              jq -r '.health as $h | $h.sriAnyMismatch as $m | $h.obfuscation as $o | ["|sriAnyMismatch|"+($m|tostring)+"|","|scannedFiles|"+($o.scannedFiles|tostring)+"|","|changedFiles|"+($o.changedFiles|tostring)+"|","|totalReplacements|"+($o.totalReplacements|tostring)+"|","|mappingSize|"+($o.mappingSize|tostring)+"|"] | .[]' .build/public/obfuscator.health.json >> $GITHUB_STEP_SUMMARY || true
              # SRI breakdown table
              echo "" >> $GITHUB_STEP_SUMMARY || true
              echo "#### SRI Summary" >> $GITHUB_STEP_SUMMARY || true
              echo "| Status | Count |" >> $GITHUB_STEP_SUMMARY || true
              echo "|---|---|" >> $GITHUB_STEP_SUMMARY || true
              jq -r '.health.sriSummary | to_entries[] | "|"+(.key)+"|"+(.value|tostring)+"|"' .build/public/obfuscator.health.json >> $GITHUB_STEP_SUMMARY || true
            else
              # fallback: include raw JSON
              sed 's/^/  /' .build/public/obfuscator.health.json >> $GITHUB_STEP_SUMMARY || true
            fi
          fi
          # include human friendly markdown summary if present
          if [ -f .build/public/obfuscation-summary.md ]; then
            echo "---" >> $GITHUB_STEP_SUMMARY || true
            sed 's/^/  /' .build/public/obfuscation-summary.md >> $GITHUB_STEP_SUMMARY || true
          fi

  # Deployment job
  deploy:
    # Limit token permissions for deployment only to what's needed.
    permissions:
      pages: write
      id-token: write
      contents: read
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Deployment summary
        if: always()
        run: |
          echo "## Deployment summary" >> $GITHUB_STEP_SUMMARY || true
          echo "- Deployment job status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY || true
          # output URL from deploy action if available
          if [ -n "${{ steps.deployment.outputs.page_url }}" ]; then
            echo "- Site URL: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY || true
          fi
  # `actions/deploy-pages` uses the default GITHUB_TOKEN and the job permissions above.
